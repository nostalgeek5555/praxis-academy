/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package kasus;

import java.io.FileReader;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import org.json.simple.JsonArray;;
import org.json.simple.JsonObject;
import org.json.simple.Jsoner;
import org.json.simple.parser.JSONParser;
import org.json.simple.DeserializationException;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;

import java.io.File;
import java.util.Iterator;
import java.util.Scanner;

public class pvpLeaderboardDemo {
    public static void main(String[] args) {
        Scanner readInput = new Scanner(System.in);
        int select;

        System.out.println("Demo Pvp Leaderboard - Tes Komparasi Parsing JSON & XML");
        System.out.println("=======================================================");
        System.out.println("Pilih tampilkan leaderboard dg JSON / XML");
        System.out.println("1. XML");
        System.out.println("2. JSON");
        System.out.println("Pilihan : >");
        select = readInput.nextInt();

        if (select == 1) {
            try {
                 File inputFile = new File("pvpLeaderboard.xml");
                 DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                 DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                 Document doc = dBuilder.parse(inputFile);
                 doc.getDocumentElement().normalize();
                 NodeList nList = doc.getElementsByTagName("rank");
                 System.out.println("==============================================");

                 for (int temp = 0; temp < nList.getLength(); temp++) {
                     Node nNode = nList.item(temp);
                     
                     if (nNode.getNodeType() == Node.ELEMENT_NODE) 
                     {
                         Element nodeElement = (Element) nNode;
                         System.out.println("===================================================");
                         System.out.println("Rank number - " + nodeElement.getAttribute("rankID"));
                         System.out.println("Player ID : " + nodeElement.getElementsByTagName("playerID").item(0).getTextContent());
                         System.out.println("Player Username : " + nodeElement.getElementsByTagName("playerUsername").item(0).getTextContent());
                         System.out.println("Player Main Job : " + nodeElement.getElementsByTagName("playerMainJob").item(0).getTextContent());
                         System.out.println("Player Total Match : " + nodeElement.getElementsByTagName("playerTotalMatch").item(0).getTextContent());
                           System.out.println("Player Total Win   : " + nodeElement.getElementsByTagName("playerWin").item(0).getTextContent());
                         System.out.println("Player Total Lose  : " + nodeElement.getElementsByTagName("playerLose").item(0).getTextContent());
                         System.out.println("Player Total Draw  : " + nodeElement.getElementsByTagName("playerDraw").item(0).getTextContent());
                         System.out.println("===================================================");
                     }
                 } 

            } 
            
            catch (Exception e) {
                e.printStackTrace();
            }
        }

        else if (select == 2)
        {
            JSONParser jsonParser = new JSONParser();
            
            try {

                 Object obj = jsonParser.parse(new FileReader("pvpLeaderboard.json"));
                 JSONObject jsonObject = (JSONObject) obj;
                 //JSONObject jsonChildObject = (JSONObject)jsonObject.get("pvpleaderboard");
                 //Iterator iterator = jsonChildObject.keys();

                 JSONArray jArr = (JSONArray) jsonObject.get("pvpleaderboard");
                 
                 for (int i = 0; i < jArr.size(); i++)
                 {
                     JSONObject rank = (JSONObject) jArr.get(i);
                     String playerID = (String) rank.get("playerID");
                     String playerUsername = (String) rank.get("playerUsername");
                     String playerMainJob = (String) rank.get("playerMainJob");
                     String playerTotalMatch = (String) rank.get("playerTotalMatch");
                     String playerWin = (String) rank.get("playerWin");
                     String playerLose = (String) rank.get("playerLose");
                     String playerDraw = (String) rank.get("playerDraw");

                     System.out.println(playerUsername);
                     System.out.println(playerMainJob);
                     System.out.println(playerTotalMatch);
                     System.out.println(playerWin);
                     System.out.println(playerLose);
                     System.out.println(playerDraw);
                     
                 }
                 
            } catch (Exception e) {
                e.printStackTrace();
                //TODO: handle exception
            }
        }
        

    }

}
