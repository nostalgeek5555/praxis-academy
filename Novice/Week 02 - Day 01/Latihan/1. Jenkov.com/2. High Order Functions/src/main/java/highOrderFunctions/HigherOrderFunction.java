/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package highOrderFunctions;

import java.util.Comparator;


public class HigherOrderFunction {

    public static void main(String[] args)
    {
       IProducer<String> producer = new IProducer<String>() {

            @Override
            public String produce() {
                return "Test produce";
            }
       };

       IConfigurator<String> configurator = new IConfigurator<String>() {

            @Override
            public void configure(String r) {
                r = "Test configurator";
                System.out.println(r);
            }
       };

       IFactory<String> factory = createFactory(producer, configurator);
       System.out.println(factory.create());
        
    }

    public static<T> IFactory  <T> createFactory(IProducer<T> producer, IConfigurator<T> configurator)
    {
        return() -> {
            T instance = producer.produce();
            System.out.println("Test return lambda expression");
            configurator.configure(instance);
            return instance;
        };
    }
}

interface IFactory<T> {
    T create();
}

interface IProducer<T> {
    T produce();
}

interface IConfigurator<T> {
    void configure(T t);
}
